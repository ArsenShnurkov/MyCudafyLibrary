<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.25.4963.10126" Name="CudafyArray" DebugInfo="false" HasCudaSourceCode="false" HasPTX="true" HasBinary="false">
  <CudaSourceCode></CudaSourceCode>
  <PTXMODULES>
    <PTXMODULE Platform="x64" Arch="sm_13" SourceCodeFile="2bc42522-2dd0-4aae-94d5-21f575c4171f"></PTXMODULE>
  </PTXMODULES>
  <BinaryModules />
  <SourceCodes>
    <SourceCodeFile ID="2bc42522-2dd0-4aae-94d5-21f575c4171f" Language="Cuda" Arch="sm_13">DQovLyBNeUN1ZGFmeS5DdWRhZnlBcnJheQ0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgTWVyZ2VFeHBvbmVudGFsKCBpbnQqIGEsIGludCBhTGVuMCwgIGludCogYiwgaW50IGJMZW4wLCBpbnQgaSwgaW50IGxlbmd0aCwgaW50IGNlaWxpbmcsIGludCBkaXJlY3Rpb24pOw0KLy8gTXlDdWRhZnkuQ3VkYWZ5QXJyYXkNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIEJpdG9uaWMoIGludCogYSwgaW50IGFMZW4wLCAgaW50KiBiLCBpbnQgYkxlbjAsIGludCBqLCBpbnQgaSwgaW50IGxlbmd0aCwgaW50IGssIGludCBkaXJlY3Rpb24pOw0KLy8gTXlDdWRhZnkuQ3VkYWZ5QXJyYXkNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIE1lcmdlTGluZWFyKCBpbnQqIGEsIGludCBhTGVuMCwgIGludCogYiwgaW50IGJMZW4wLCBpbnQgaSwgaW50IHBhcml0eSwgaW50IGxlbmd0aCwgaW50IGRpcmVjdGlvbik7DQovLyBNeUN1ZGFmeS5DdWRhZnlBcnJheQ0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgSGFzaCggaW50KiBhLCBpbnQgYUxlbjAsICBpbnQqIGIsIGludCBiTGVuMCwgIGludCogYywgaW50IGNMZW4wLCAgaW50KiBkLCBpbnQgZExlbjAsIGludCBzdGVwKTsNCi8vIE15Q3VkYWZ5LkN1ZGFmeUFycmF5DQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCBTb3J0ZWQoIGludCogYSwgaW50IGFMZW4wLCAgaW50KiBiLCBpbnQgYkxlbjAsICBpbnQqIGMsIGludCBjTGVuMCwgIGludCogZCwgaW50IGRMZW4wLCBpbnQgc3RlcCwgaW50IGRpcmVjdGlvbik7DQoNCi8vIE15Q3VkYWZ5LkN1ZGFmeUFycmF5DQpfX2NvbnN0YW50X18gaW50IF9hWzEwNV07DQojZGVmaW5lIF9hTGVuMCAxMDUNCi8vIE15Q3VkYWZ5LkN1ZGFmeUFycmF5DQpfX2NvbnN0YW50X18gaW50IF9iWzEwNV07DQojZGVmaW5lIF9iTGVuMCAxMDUNCi8vIE15Q3VkYWZ5LkN1ZGFmeUFycmF5DQpfX2NvbnN0YW50X18gaW50IF9jWzI5XTsNCiNkZWZpbmUgX2NMZW4wIDI5DQovLyBNeUN1ZGFmeS5DdWRhZnlBcnJheQ0KX19jb25zdGFudF9fIGludCBEWzFdOw0KI2RlZmluZSBETGVuMCAxDQovLyBNeUN1ZGFmeS5DdWRhZnlBcnJheQ0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgTWVyZ2VFeHBvbmVudGFsKCBpbnQqIGEsIGludCBhTGVuMCwgIGludCogYiwgaW50IGJMZW4wLCBpbnQgaSwgaW50IGxlbmd0aCwgaW50IGNlaWxpbmcsIGludCBkaXJlY3Rpb24pDQp7DQoJZm9yIChpbnQgaiA9IDIgKiAoYmxvY2tEaW0ueCAqIGJsb2NrSWR4LnggKyB0aHJlYWRJZHgueCkgPDwgKGkgJiAzMSk7IGogPCBjZWlsaW5nOyBqICs9IDIgKiBibG9ja0RpbS54ICogZ3JpZERpbS54IDw8IChpICYgMzEpKQ0KCXsNCgkJaW50IG51bSA9IGxlbmd0aCAmIC0oMSA8PCAobWluKG1heCgwLCBqICsgKDIgPDwgKGkgJiAzMSkpKSwgY2VpbGluZykgJiAzMSkpOw0KCQlpbnQgbnVtMiA9IGxlbmd0aCAmIC0oMSA8PCAobWluKG1heCgwLCBqICsgKDEgPDwgKGkgJiAzMSkpKSwgY2VpbGluZykgJiAzMSkpOw0KCQlpbnQgbnVtMyA9IGxlbmd0aCAmIC0oMSA8PCAobWluKG1heCgwLCBqKSwgY2VpbGluZykgJiAzMSkpOw0KCQlpbnQgayA9IG51bTIgLSBudW07DQoJCWludCBsID0gbnVtMyAtIG51bTI7DQoJCWludCBudW00ID0gbnVtMyAtIG51bTsNCgkJd2hpbGUgKGsgPiAwICYmIGwgPiAwKQ0KCQl7DQoJCQlpZiAoZGlyZWN0aW9uICogKGFbKG51bSArIGsgLSAxKV0gLSBhWyhudW0yICsgbCAtIDEpXSkgPiAwKQ0KCQkJew0KCQkJCWJbKG51bSArIC0tbnVtNCldID0gYVsobnVtICsgLS1rKV07DQoJCQl9DQoJCQllbHNlDQoJCQl7DQoJCQkJYlsobnVtICsgLS1udW00KV0gPSBhWyhudW0yICsgLS1sKV07DQoJCQl9DQoJCX0NCgkJd2hpbGUgKGsgPiAwKQ0KCQl7DQoJCQliWyhudW0gKyAtLW51bTQpXSA9IGFbKG51bSArIC0tayldOw0KCQl9DQoJCXdoaWxlIChsID4gMCkNCgkJew0KCQkJYlsobnVtICsgLS1udW00KV0gPSBhWyhudW0yICsgLS1sKV07DQoJCX0NCgl9DQp9DQovLyBNeUN1ZGFmeS5DdWRhZnlBcnJheQ0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgQml0b25pYyggaW50KiBhLCBpbnQgYUxlbjAsICBpbnQqIGIsIGludCBiTGVuMCwgaW50IGosIGludCBpLCBpbnQgbGVuZ3RoLCBpbnQgaywgaW50IGRpcmVjdGlvbikNCnsNCglpbnQgbnVtID0gMSA8PCAoaiAmIDMxKTsNCglmb3IgKGludCBsID0gYmxvY2tEaW0ueCAqIGJsb2NrSWR4LnggKyB0aHJlYWRJZHgueDsgbCA8IChsZW5ndGggJiAtMSA8PCAoaSAmIDMxKSk7IGwgKz0gYmxvY2tEaW0ueCAqIGdyaWREaW0ueCkNCgl7DQoJCWlmICgobCAmIG51bSkgIT0gbnVtKQ0KCQl7DQoJCQlpbnQgbTsNCgkJCWZvciAobSA9ICgobCAmICgxIDw8IChrICYgMzEpKSAtIDEpID4+IChpICYgMzEpICYgMSk7IG0gPiAxOyBtID0gKG0gPj4gMSBeIChtICYgMSkpKQ0KCQkJew0KCQkJfQ0KCQkJbSA9IDEgLSAobSA8PCAxKTsNCgkJCWludCBudW0yID0gbSAqIGRpcmVjdGlvbiAqIChhWyhsICYgfm51bSldIC0gYVsobCB8IG51bSldKTsNCgkJCWlmIChudW0yID4gMCkNCgkJCXsNCgkJCQlpbnQgbnVtMyA9IGFbKGwgJiB+bnVtKV07DQoJCQkJYVsobCAmIH5udW0pXSA9IGFbKGwgfCBudW0pXTsNCgkJCQlhWyhsIHwgbnVtKV0gPSBudW0zOw0KCQkJfQ0KCQl9DQoJfQ0KfQ0KLy8gTXlDdWRhZnkuQ3VkYWZ5QXJyYXkNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIE1lcmdlTGluZWFyKCBpbnQqIGEsIGludCBhTGVuMCwgIGludCogYiwgaW50IGJMZW4wLCBpbnQgaSwgaW50IHBhcml0eSwgaW50IGxlbmd0aCwgaW50IGRpcmVjdGlvbikNCnsNCglmb3IgKGludCBqID0gKDIgKiAoYmxvY2tEaW0ueCAqIGJsb2NrSWR4LnggKyB0aHJlYWRJZHgueCkgPDwgKGkgJiAzMSkpIC0gKHBhcml0eSA8PCAoaSAmIDMxKSk7IGogPCBsZW5ndGggKyAocGFyaXR5IDw8IChpICYgMzEpKTsgaiArPSAyICogYmxvY2tEaW0ueCAqIGdyaWREaW0ueCA8PCAoaSAmIDMxKSkNCgl7DQoJCWludCBudW0gPSBtaW4obWF4KDAsIGopLCBsZW5ndGgpOw0KCQlpbnQgbnVtMiA9IG1pbihtYXgoMCwgaiArICgxIDw8IChpICYgMzEpKSksIGxlbmd0aCk7DQoJCWludCBudW0zID0gbWluKG1heCgwLCBqICsgKDIgPDwgKGkgJiAzMSkpKSwgbGVuZ3RoKTsNCgkJaW50IGsgPSBudW0yIC0gbnVtOw0KCQlpbnQgbCA9IG51bTMgLSBudW0yOw0KCQlpbnQgbnVtNCA9IG51bTMgLSBudW07DQoJCXdoaWxlIChrID4gMCAmJiBsID4gMCkNCgkJew0KCQkJaWYgKGRpcmVjdGlvbiAqIChhWyhudW0gKyBrIC0gMSldIC0gYVsobnVtMiArIGwgLSAxKV0pID4gMCkNCgkJCXsNCgkJCQliWyhudW0gKyAtLW51bTQpXSA9IGFbKG51bSArIC0tayldOw0KCQkJfQ0KCQkJZWxzZQ0KCQkJew0KCQkJCWJbKG51bSArIC0tbnVtNCldID0gYVsobnVtMiArIC0tbCldOw0KCQkJfQ0KCQl9DQoJCXdoaWxlIChrID4gMCkNCgkJew0KCQkJYlsobnVtICsgLS1udW00KV0gPSBhWyhudW0gKyAtLWspXTsNCgkJfQ0KCQl3aGlsZSAobCA+IDApDQoJCXsNCgkJCWJbKG51bSArIC0tbnVtNCldID0gYVsobnVtMiArIC0tbCldOw0KCQl9DQoJfQ0KfQ0KLy8gTXlDdWRhZnkuQ3VkYWZ5QXJyYXkNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIEhhc2goIGludCogYSwgaW50IGFMZW4wLCAgaW50KiBiLCBpbnQgYkxlbjAsICBpbnQqIGMsIGludCBjTGVuMCwgIGludCogZCwgaW50IGRMZW4wLCBpbnQgc3RlcCkNCnsNCglzd2l0Y2ggKHN0ZXApDQoJew0KCQljYXNlIDE6DQoJCXsNCgkJCWZvciAoaW50IGkgPSBibG9ja0RpbS54ICogYmxvY2tJZHgueCArIHRocmVhZElkeC54OyBpIDwgY0xlbjA7IGkgKz0gYmxvY2tEaW0ueCAqIGdyaWREaW0ueCkNCgkJCXsNCgkJCQlpbnQgbnVtID0gaSAqIGFMZW4wIC8gY0xlbjA7DQoJCQkJaW50IG51bTIgPSAoaSArIDEpICogYUxlbjAgLyBjTGVuMDsNCgkJCQljWyhpKV0gPSBhWyhudW0pXTsNCgkJCQlmb3IgKGludCBqID0gbnVtICsgMTsgaiA8IG51bTI7IGorKykNCgkJCQl7DQoJCQkJCWNbKGkpXSA9IChjWyhpKV0gPDwgMSBeIGNbKGkpXSA+PiAzMSBeIGFbKGopXSk7DQoJCQkJfQ0KCQkJfQ0KCQkJYnJlYWs7DQoJCX0NCgkJY2FzZSAyOg0KCQl7DQoJCQlmb3IgKGludCBpID0gYmxvY2tEaW0ueCAqIGJsb2NrSWR4LnggKyB0aHJlYWRJZHgueDsgaSA8IDE7IGkgKz0gYmxvY2tEaW0ueCAqIGdyaWREaW0ueCkNCgkJCXsNCgkJCQlkWygwKV0gPSBiWygwKV07DQoJCQkJZm9yIChpbnQgaiA9IDE7IGogPCBjTGVuMDsgaisrKQ0KCQkJCXsNCgkJCQkJZFsoMCldID0gKGRbKDApXSA8PCAxIF4gZFsoMCldID4+IDMxIF4gY1soaildKTsNCgkJCQl9DQoJCQl9DQoJCQlicmVhazsNCgkJfQ0KCX0NCn0NCi8vIE15Q3VkYWZ5LkN1ZGFmeUFycmF5DQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCBTb3J0ZWQoIGludCogYSwgaW50IGFMZW4wLCAgaW50KiBiLCBpbnQgYkxlbjAsICBpbnQqIGMsIGludCBjTGVuMCwgIGludCogZCwgaW50IGRMZW4wLCBpbnQgc3RlcCwgaW50IGRpcmVjdGlvbikNCnsNCglzd2l0Y2ggKHN0ZXApDQoJew0KCQljYXNlIDA6DQoJCXsNCgkJCWZvciAoaW50IGkgPSBibG9ja0RpbS54ICogYmxvY2tJZHgueCArIHRocmVhZElkeC54OyBpIDwgY0xlbjA7IGkgKz0gYmxvY2tEaW0ueCAqIGdyaWREaW0ueCkNCgkJCXsNCgkJCQlpbnQgbnVtID0gaSAqIGFMZW4wIC8gY0xlbjA7DQoJCQkJaW50IG51bTIgPSAoaSArIDEpICogYUxlbjAgLyBjTGVuMDsNCgkJCQljWyhpKV0gPSAxOw0KCQkJCWZvciAoaW50IGogPSBudW07IGogPCBudW0yIC0gMTsgaisrKQ0KCQkJCXsNCgkJCQkJY1soaSldID0gKChkaXJlY3Rpb24gKiAoYVsoaildIC0gYVsoaiArIDEpXSkgPD0gMCkgPyAxIDogMCk7DQoJCQkJfQ0KCQkJfQ0KCQkJYnJlYWs7DQoJCX0NCgkJY2FzZSAxOg0KCQl7DQoJCQlmb3IgKGludCBpID0gYmxvY2tEaW0ueCAqIGJsb2NrSWR4LnggKyB0aHJlYWRJZHgueDsgaSA8IDE7IGkgKz0gYmxvY2tEaW0ueCAqIGdyaWREaW0ueCkNCgkJCXsNCgkJCQlkWygwKV0gPSBjWygwKV07DQoJCQkJaW50IGogPSAxOw0KCQkJCXdoaWxlIChqIDwgYkxlbjAgJiYgZFsoMCldICE9IDApDQoJCQkJew0KCQkJCQlkWygwKV0gPSBjWyhqKV07DQoJCQkJCWorKzsNCgkJCQl9DQoJCQl9DQoJCQlicmVhazsNCgkJfQ0KCX0NCn0NCg==</SourceCodeFile>
  </SourceCodes>
  <Functions>
    <CudafyKernelMethod Name="MergeExponental" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyArray</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1557498533</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Int32[]" Name="a" Position="1" />
        <Parameter Type="System.Int32[]" Name="b" Position="2" />
        <Parameter Type="System.Int32" Name="i" Position="3" />
        <Parameter Type="System.Int32" Name="length" Position="4" />
        <Parameter Type="System.Int32" Name="ceiling" Position="5" />
        <Parameter Type="System.Int32" Name="direction" Position="6" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Bitonic" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyArray</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1557498533</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Int32[]" Name="a" Position="1" />
        <Parameter Type="System.Int32[]" Name="b" Position="2" />
        <Parameter Type="System.Int32" Name="j" Position="3" />
        <Parameter Type="System.Int32" Name="i" Position="4" />
        <Parameter Type="System.Int32" Name="length" Position="5" />
        <Parameter Type="System.Int32" Name="k" Position="6" />
        <Parameter Type="System.Int32" Name="direction" Position="7" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="MergeLinear" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyArray</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1557498533</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Int32[]" Name="a" Position="1" />
        <Parameter Type="System.Int32[]" Name="b" Position="2" />
        <Parameter Type="System.Int32" Name="i" Position="3" />
        <Parameter Type="System.Int32" Name="parity" Position="4" />
        <Parameter Type="System.Int32" Name="length" Position="5" />
        <Parameter Type="System.Int32" Name="direction" Position="6" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Hash" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyArray</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1557498533</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Int32[]" Name="a" Position="1" />
        <Parameter Type="System.Int32[]" Name="b" Position="2" />
        <Parameter Type="System.Int32[]" Name="c" Position="3" />
        <Parameter Type="System.Int32[]" Name="d" Position="4" />
        <Parameter Type="System.Int32" Name="step" Position="5" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Sorted" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyArray</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1557498533</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Int32[]" Name="a" Position="1" />
        <Parameter Type="System.Int32[]" Name="b" Position="2" />
        <Parameter Type="System.Int32[]" Name="c" Position="3" />
        <Parameter Type="System.Int32[]" Name="d" Position="4" />
        <Parameter Type="System.Int32" Name="step" Position="5" />
        <Parameter Type="System.Int32" Name="direction" Position="6" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants>
    <CudafyConstantInfo Name="_a" FieldName="_a" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyArray</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1557498533</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_b" FieldName="_b" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyArray</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1557498533</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_c" FieldName="_c" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyArray</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1557498533</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="D" FieldName="D" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafyArray</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1557498533</Checksum>
    </CudafyConstantInfo>
  </Constants>
  <Types />
</CudafyModule>