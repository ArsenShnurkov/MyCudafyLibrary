<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.25.4963.10126" Name="CudafySequencies" DebugInfo="false" HasCudaSourceCode="false" HasPTX="true" HasBinary="false">
  <CudaSourceCode></CudaSourceCode>
  <PTXMODULES>
    <PTXMODULE Platform="x64" Arch="sm_13" SourceCodeFile="ff2a5ce4-4d7e-4d45-ab9f-7ed89f98e956"></PTXMODULE>
  </PTXMODULES>
  <BinaryModules />
  <SourceCodes>
    <SourceCodeFile ID="ff2a5ce4-4d7e-4d45-ab9f-7ed89f98e956" Language="Cuda" Arch="sm_13">DQovLyBNeUN1ZGFmeS5DdWRhZnlTZXF1ZW5jaWVzDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCBDb21wYXJlKCBpbnQqIHNlcXVlbmNpZXMxLCBpbnQgc2VxdWVuY2llczFMZW4wLCAgaW50KiBpbmRleGVzMSwgaW50IGluZGV4ZXMxTGVuMCwgIGludCogc2VxdWVuY2llczIsIGludCBzZXF1ZW5jaWVzMkxlbjAsICBpbnQqIGluZGV4ZXMyLCBpbnQgaW5kZXhlczJMZW4wLCAgaW50KiBtYXRyaXgsIGludCBtYXRyaXhMZW4wLCBpbnQgbWF0cml4TGVuMSk7DQovLyBNeUN1ZGFmeS5DdWRhZnlTZXF1ZW5jaWVzDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCBDb3VudEludGVyc2VjdGlvbnMoIGludCogc2VxdWVuY2llczEsIGludCBzZXF1ZW5jaWVzMUxlbjAsICBpbnQqIGluZGV4ZXMxLCBpbnQgaW5kZXhlczFMZW4wLCAgaW50KiBzZXF1ZW5jaWVzMiwgaW50IHNlcXVlbmNpZXMyTGVuMCwgIGludCogaW5kZXhlczIsIGludCBpbmRleGVzMkxlbjAsICBpbnQqIG1hdHJpeCwgaW50IG1hdHJpeExlbjAsIGludCBtYXRyaXhMZW4xKTsNCi8vIE15Q3VkYWZ5LkN1ZGFmeVNlcXVlbmNpZXMNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIElzRnJvbVRvKCBpbnQqIHNlcXVlbmNpZXMxLCBpbnQgc2VxdWVuY2llczFMZW4wLCAgaW50KiBpbmRleGVzMSwgaW50IGluZGV4ZXMxTGVuMCwgIGludCogc2VxdWVuY2llczIsIGludCBzZXF1ZW5jaWVzMkxlbjAsICBpbnQqIGluZGV4ZXMyLCBpbnQgaW5kZXhlczJMZW4wLCAgaW50KiBtYXRyaXgsIGludCBtYXRyaXhMZW4wLCBpbnQgbWF0cml4TGVuMSk7DQoNCi8vIE15Q3VkYWZ5LkN1ZGFmeVNlcXVlbmNpZXMNCl9fY29uc3RhbnRfXyBpbnQgX2luZGV4ZXMxWzk2XTsNCiNkZWZpbmUgX2luZGV4ZXMxTGVuMCA5Ng0KLy8gTXlDdWRhZnkuQ3VkYWZ5U2VxdWVuY2llcw0KX19jb25zdGFudF9fIGludCBfaW5kZXhlczJbOTZdOw0KI2RlZmluZSBfaW5kZXhlczJMZW4wIDk2DQovLyBNeUN1ZGFmeS5DdWRhZnlTZXF1ZW5jaWVzDQpfX2NvbnN0YW50X18gaW50IF9zZXF1ZW5jaWVzMVs5NV07DQojZGVmaW5lIF9zZXF1ZW5jaWVzMUxlbjAgOTUNCi8vIE15Q3VkYWZ5LkN1ZGFmeVNlcXVlbmNpZXMNCl9fY29uc3RhbnRfXyBpbnQgX3NlcXVlbmNpZXMyWzk1XTsNCiNkZWZpbmUgX3NlcXVlbmNpZXMyTGVuMCA5NQ0KLy8gTXlDdWRhZnkuQ3VkYWZ5U2VxdWVuY2llcw0KX19jb25zdGFudF9fIGludCBfbWF0cml4Wzk1ICogOTVdOw0KI2RlZmluZSBfbWF0cml4TGVuMCA5NQ0KICNkZWZpbmUgX21hdHJpeExlbjEgOTUNCi8vIE15Q3VkYWZ5LkN1ZGFmeVNlcXVlbmNpZXMNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIENvbXBhcmUoIGludCogc2VxdWVuY2llczEsIGludCBzZXF1ZW5jaWVzMUxlbjAsICBpbnQqIGluZGV4ZXMxLCBpbnQgaW5kZXhlczFMZW4wLCAgaW50KiBzZXF1ZW5jaWVzMiwgaW50IHNlcXVlbmNpZXMyTGVuMCwgIGludCogaW5kZXhlczIsIGludCBpbmRleGVzMkxlbjAsICBpbnQqIG1hdHJpeCwgaW50IG1hdHJpeExlbjAsIGludCBtYXRyaXhMZW4xKQ0Kew0KCWludCBsZW5ndGggPSBtYXRyaXhMZW4wOw0KCWludCBsZW5ndGgyID0gbWF0cml4TGVuMTsNCglmb3IgKGludCBpID0gYmxvY2tEaW0ueCAqIGJsb2NrSWR4LnggKyB0aHJlYWRJZHgueDsgaSA8IGxlbmd0aCAqIGxlbmd0aDI7IGkgKz0gYmxvY2tEaW0ueCAqIGdyaWREaW0ueCkNCgl7DQoJCWludCBudW0gPSBpIC8gbGVuZ3RoMjsNCgkJaW50IG51bTIgPSBpICUgbGVuZ3RoMjsNCgkJbWF0cml4WyhudW0pICogbWF0cml4TGVuMSArICggbnVtMildID0gaW5kZXhlczFbKG51bSArIDEpXSAtIGluZGV4ZXMxWyhudW0pXSAtIChpbmRleGVzMlsobnVtMiArIDEpXSAtIGluZGV4ZXMyWyhudW0yKV0pOw0KCQlpbnQgbnVtMyA9IGluZGV4ZXMxWyhudW0pXTsNCgkJaW50IG51bTQgPSBpbmRleGVzMlsobnVtMildOw0KCQl3aGlsZSAobnVtMyA8IGluZGV4ZXMxWyhudW0gKyAxKV0gJiYgbnVtNCA8IGluZGV4ZXMyWyhudW0yICsgMSldICYmIG1hdHJpeFsobnVtKSAqIG1hdHJpeExlbjEgKyAoIG51bTIpXSA9PSAwKQ0KCQl7DQoJCQltYXRyaXhbKG51bSkgKiBtYXRyaXhMZW4xICsgKCBudW0yKV0gPSBzZXF1ZW5jaWVzMVsobnVtMyldIC0gc2VxdWVuY2llczJbKG51bTQpXTsNCgkJCW51bTMrKzsNCgkJCW51bTQrKzsNCgkJfQ0KCX0NCn0NCi8vIE15Q3VkYWZ5LkN1ZGFmeVNlcXVlbmNpZXMNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIENvdW50SW50ZXJzZWN0aW9ucyggaW50KiBzZXF1ZW5jaWVzMSwgaW50IHNlcXVlbmNpZXMxTGVuMCwgIGludCogaW5kZXhlczEsIGludCBpbmRleGVzMUxlbjAsICBpbnQqIHNlcXVlbmNpZXMyLCBpbnQgc2VxdWVuY2llczJMZW4wLCAgaW50KiBpbmRleGVzMiwgaW50IGluZGV4ZXMyTGVuMCwgIGludCogbWF0cml4LCBpbnQgbWF0cml4TGVuMCwgaW50IG1hdHJpeExlbjEpDQp7DQoJaW50IGxlbmd0aCA9IG1hdHJpeExlbjA7DQoJaW50IGxlbmd0aDIgPSBtYXRyaXhMZW4xOw0KCWZvciAoaW50IGkgPSBibG9ja0RpbS54ICogYmxvY2tJZHgueCArIHRocmVhZElkeC54OyBpIDwgbGVuZ3RoICogbGVuZ3RoMjsgaSArPSBibG9ja0RpbS54ICogZ3JpZERpbS54KQ0KCXsNCgkJaW50IG51bSA9IGkgLyBsZW5ndGgyOw0KCQlpbnQgbnVtMiA9IGkgJSBsZW5ndGgyOw0KCQltYXRyaXhbKG51bSkgKiBtYXRyaXhMZW4xICsgKCBudW0yKV0gPSAwOw0KCQlmb3IgKGludCBqID0gaW5kZXhlczFbKG51bSldOyBqIDwgaW5kZXhlczFbKG51bSArIDEpXTsgaisrKQ0KCQl7DQoJCQlmb3IgKGludCBrID0gaW5kZXhlczJbKG51bTIpXTsgayA8IGluZGV4ZXMyWyhudW0yICsgMSldOyBrKyspDQoJCQl7DQoJCQkJaWYgKHNlcXVlbmNpZXMxWyhqKV0gPT0gc2VxdWVuY2llczJbKGspXSkNCgkJCQl7DQoJCQkJCW1hdHJpeFsobnVtKSAqIG1hdHJpeExlbjEgKyAoIG51bTIpXSsrOw0KCQkJCX0NCgkJCX0NCgkJfQ0KCX0NCn0NCi8vIE15Q3VkYWZ5LkN1ZGFmeVNlcXVlbmNpZXMNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkIElzRnJvbVRvKCBpbnQqIHNlcXVlbmNpZXMxLCBpbnQgc2VxdWVuY2llczFMZW4wLCAgaW50KiBpbmRleGVzMSwgaW50IGluZGV4ZXMxTGVuMCwgIGludCogc2VxdWVuY2llczIsIGludCBzZXF1ZW5jaWVzMkxlbjAsICBpbnQqIGluZGV4ZXMyLCBpbnQgaW5kZXhlczJMZW4wLCAgaW50KiBtYXRyaXgsIGludCBtYXRyaXhMZW4wLCBpbnQgbWF0cml4TGVuMSkNCnsNCglpbnQgbGVuZ3RoID0gbWF0cml4TGVuMDsNCglpbnQgbGVuZ3RoMiA9IG1hdHJpeExlbjE7DQoJZm9yIChpbnQgaSA9IGJsb2NrRGltLnggKiBibG9ja0lkeC54ICsgdGhyZWFkSWR4Lng7IGkgPCBsZW5ndGggKiBsZW5ndGgyOyBpICs9IGJsb2NrRGltLnggKiBncmlkRGltLngpDQoJew0KCQlpbnQgbnVtID0gaSAvIGxlbmd0aDI7DQoJCWludCBudW0yID0gaSAlIGxlbmd0aDI7DQoJCW1hdHJpeFsobnVtKSAqIG1hdHJpeExlbjEgKyAoIG51bTIpXSA9IDA7DQoJCWludCBudW0zID0gMDsNCgkJaW50IG51bTQgPSBpbmRleGVzMVsobnVtKV07DQoJCXdoaWxlIChudW00IDwgaW5kZXhlczFbKG51bSldICsgMSAmJiBudW0zID09IDApDQoJCXsNCgkJCWludCBudW01ID0gaW5kZXhlczJbKG51bTIpXTsNCgkJCXdoaWxlIChudW01IDwgaW5kZXhlczJbKG51bTIgKyAxKV0gJiYgbnVtMyA9PSAwKQ0KCQkJew0KCQkJCWlmIChzZXF1ZW5jaWVzMVsobnVtNCldID09IHNlcXVlbmNpZXMyWyhudW01KV0pDQoJCQkJew0KCQkJCQludW0zID0gMTsNCgkJCQl9DQoJCQkJbnVtNSsrOw0KCQkJfQ0KCQkJbnVtNCsrOw0KCQl9DQoJCW51bTQgPSBpbmRleGVzMVsobnVtICsgMSldIC0gMTsNCgkJd2hpbGUgKG51bTQgPCBpbmRleGVzMVsobnVtICsgMSldICYmIG51bTMgIT0gMCAmJiBtYXRyaXhbKG51bSkgKiBtYXRyaXhMZW4xICsgKCBudW0yKV0gPT0gMCkNCgkJew0KCQkJaW50IG51bTUgPSBpbmRleGVzMlsobnVtMildOw0KCQkJd2hpbGUgKG51bTUgPCBpbmRleGVzMlsobnVtMiArIDEpXSAmJiBudW0zICE9IDAgJiYgbWF0cml4WyhudW0pICogbWF0cml4TGVuMSArICggbnVtMildID09IDApDQoJCQl7DQoJCQkJbWF0cml4WyhudW0pICogbWF0cml4TGVuMSArICggbnVtMildID0gKChzZXF1ZW5jaWVzMVsobnVtNCldID09IHNlcXVlbmNpZXMyWyhudW01KV0pID8gMSA6IDApOw0KCQkJCW51bTUrKzsNCgkJCX0NCgkJCW51bTQrKzsNCgkJfQ0KCX0NCn0NCg==</SourceCodeFile>
  </SourceCodes>
  <Functions>
    <CudafyKernelMethod Name="Compare" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafySequencies</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1463333165</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Int32[]" Name="sequencies1" Position="1" />
        <Parameter Type="System.Int32[]" Name="indexes1" Position="2" />
        <Parameter Type="System.Int32[]" Name="sequencies2" Position="3" />
        <Parameter Type="System.Int32[]" Name="indexes2" Position="4" />
        <Parameter Type="System.Int32[,]" Name="matrix" Position="5" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="CountIntersections" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafySequencies</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1463333165</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Int32[]" Name="sequencies1" Position="1" />
        <Parameter Type="System.Int32[]" Name="indexes1" Position="2" />
        <Parameter Type="System.Int32[]" Name="sequencies2" Position="3" />
        <Parameter Type="System.Int32[]" Name="indexes2" Position="4" />
        <Parameter Type="System.Int32[,]" Name="matrix" Position="5" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="IsFromTo" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafySequencies</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1463333165</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Int32[]" Name="sequencies1" Position="1" />
        <Parameter Type="System.Int32[]" Name="indexes1" Position="2" />
        <Parameter Type="System.Int32[]" Name="sequencies2" Position="3" />
        <Parameter Type="System.Int32[]" Name="indexes2" Position="4" />
        <Parameter Type="System.Int32[,]" Name="matrix" Position="5" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants>
    <CudafyConstantInfo Name="_indexes1" FieldName="_indexes1" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafySequencies</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1463333165</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_indexes2" FieldName="_indexes2" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafySequencies</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1463333165</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_sequencies1" FieldName="_sequencies1" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafySequencies</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1463333165</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_sequencies2" FieldName="_sequencies2" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafySequencies</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1463333165</Checksum>
    </CudafyConstantInfo>
    <CudafyConstantInfo Name="_matrix" FieldName="_matrix" IsDummy="false" DummyBehaviour="Default">
      <Type>MyCudafy.CudafySequencies</Type>
      <Assembly>MyCudafy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>MyCudafy</AssemblyName>
      <AssemblyPath>D:\Projects\MyLibrary\MyCudafy.UnitTest\bin\x64\Debug\MyCudafy.dll</AssemblyPath>
      <Checksum>1463333165</Checksum>
    </CudafyConstantInfo>
  </Constants>
  <Types />
</CudafyModule>